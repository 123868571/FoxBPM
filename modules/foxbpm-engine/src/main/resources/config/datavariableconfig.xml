<?xml version="1.0" encoding="UTF-8"?>
<variableconfig:DataVariableConfig xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:variableconfig="http://www.foxbpm.org/variableconfig">
  <dataVariableType>
    <type name="流程引擎变量" id="类型ID1"/>
    <type name="系统环境变量" id="类型ID2"/>
    <type name="人员信息变量" id="类型ID3"/>
    <type name="表单数据变量" id="类型ID4"/>
    <type name="常用函数" id="a3870f52-49bd-4baa-a0e3-9d835660fe3e"/>
    <type name="会签常用" id="2135aa29-d504-4d29-8e02-b90f8cd6869f"/>
    <type name="数据库操作" id="828e5d0b-7dd3-48b4-a5b2-94f2d6666c65"/>
    <type name="时间操作" id="72b21427-97fe-44ad-a00d-6b2a301a7655"/>
    <type name="常用变量" id="类型ID5"/>
  </dataVariableType>
  <foxBPMDataVariable type="类型ID0"/>
  <foxBPMDataVariable type="类型ID1">
    <dataVariableDef name="提交人" dataType="java.lang.String" value="processInfo.getInitiator()" doc="通过这个表达式可以获取流程的提交人"/>
    <dataVariableDef name="业务对象关联值" dataType="java.lang.String" value="processInfo.getBizKey()" doc="获取业务对象关联值,这个的关联值是指业务对象与流程关联的字段的值。"/>
    <dataVariableDef name="数据库操作对象" dataType="com.founder.fix.fixflow.core.impl.db.SqlCommand" value="processInfo.getSqlCommand()" doc="获取FixFlow引擎自带的数据库操作类"/>
    <dataVariableDef name="流程操作人" dataType="java.lang.String" value="import com.founder.fix.fixflow.core.impl.identity.Authentication;;&#xD;&#xA;&#xD;&#xA;Authentication.getAuthenticatedUserId();" doc="获取参与本次流程执行的操作人"/>
    <dataVariableDef name="流程定义" dataType="com.founder.fix.fixflow.core.impl.bpmn.behavior.ProcessDefinitionBehavior" value="processInfo.getProcessDefinition()" doc="获取流程定义"/>
    <dataVariableDef name="流程实例" dataType="com.founder.fix.fixflow.core.runtime.ProcessInstance" value="processInfo.getProcessInstance()" doc="获取流程实例"/>
    <dataVariableDef name="流程令牌" dataType="com.founder.fix.fixflow.core.runtime.Token" value="processInfo.getToken()" doc="获取流程令牌"/>
    <dataVariableDef name="数据库链接" dataType="java.sql.Connection" value="java.sql.Connection" doc="获取流程引擎内置的数据库链接"/>
    <dataVariableDef name="流程启动人" dataType="java.lang.String" value="processInfo.getStartAuthor()" doc="通过这个表达式可以获取流程启动时的启动人编号"/>
    <dataVariableDef name="获取用户信息" dataType="java.lang.Object" value="processInfo.findUserInfoByUserId(&quot;用户编号&quot;)" doc="有这三个方法可以调用&#xA;getUserId()&#xA;getUserName()&#xA;getPropertyMap()"/>
  </foxBPMDataVariable>
  <foxBPMDataVariable type="2135aa29-d504-4d29-8e02-b90f8cd6869f">
    <dataVariableDef name="会签结果判断" dataType="java.lang.String" value="y=Collections.frequency(${意见合集}, &quot;同意&quot;);&#xD;&#xA;if(y>2){&#xD;&#xA;return true;&#xD;&#xA;}&#xD;&#xA;else{&#xD;&#xA;return false;&#xD;&#xA;}&#xD;&#xA;" doc="判断会签结果内容"/>
  </foxBPMDataVariable>
  <foxBPMDataVariable type="a3870f52-49bd-4baa-a0e3-9d835660fe3e">
    <dataVariableDef name="比较字符串" dataType="java.lang.String" value="&quot;字符串&quot;.equals(&quot;字符串&quot;)" doc="比较字符串"/>
    <dataVariableDef name="字符串数组" dataType="java.lang.String[]" value="&quot;字符串,字符串,字符串&quot;.split(&quot;,&quot;)" doc="将字符串按一定格式分割成数组"/>
    <dataVariableDef name="创建ArrayList" dataType="java.util.List&lt;String>" value="new java.util.ArrayList();" doc="创建一个ArrayList"/>
    <dataVariableDef name="数字类型转换" dataType="java.math.BigDecimal" value=" Integer.parseInt(&quot;&quot;)" doc="将一个字符串转换成数字类型"/>
    <dataVariableDef name="控制台输出" dataType="java.lang.Object" value="System.out.print(&quot;&quot;)" doc="向控制台打印"/>
    <dataVariableDef name="获取时间计算" dataType="java.sql.Time" value="cal = Calendar.getInstance();  &#xA;cal.add(Calendar.MINUTE, +1);&#xA;return cal.getTime();" doc="获取一个时间"/>
  </foxBPMDataVariable>
  <foxBPMDataVariable type="类型ID3">
    <dataVariableDef name="用户编号" dataType="java.lang.String" value="userInfo.getUserID()" doc="获取用户编号"/>
    <dataVariableDef name="用户名称" dataType="java.lang.String" value="userInfo.getUserName()" doc="获取用户名称"/>
    <dataVariableDef name="用户所在部门编号" dataType="java.lang.String" value="userInfo.getOrgId()" doc="获取用户所在部门编号"/>
    <dataVariableDef name="用户扩展属性" dataType="java.lang.Object" value="userInfo.getItem(&quot;&quot;)" doc="获取用户扩展属性"/>
    <dataVariableDef name="组上级" dataType="java.lang.Object" value="import com.founder.fix.fixflow.core.impl.identity.Authentication;&#xD;&#xA;&#xD;&#xA;Authentication.findParentGroupByGroupId(String groupId,String groupType)" doc="获取组的上级"/>
    <dataVariableDef name="组级别值" dataType="int" value="import com.founder.fix.fixflow.core.impl.identity.Authentication;&#xD;&#xA;&#xD;&#xA;Authentication.findGroupByGroupIdAndType(&quot;角色编号&quot;,&quot;role&quot;).getLevelNum()" doc="组级别值"/>
    <dataVariableDef name="获取用户所在组" dataType="java.util.List&lt;Object>" value="import com.founder.fix.fixflow.core.impl.identity.Authentication;&#xD;&#xA;Authentication.findGroupsByUser(&quot;用户编号&quot;,&quot;组类型dept、role&quot;);" doc="返回结果为List&lt;GroupTo>"/>
    <dataVariableDef name="获取用户最大组" dataType="com.founder.fix.fixflow.core.impl.identity.GroupTo" value="import com.founder.fix.fixflow.core.impl.identity.Authentication;&#xD;&#xA;group=Authentication.findMaxLevelGroupByUserId(&quot;用户编号&quot;,&quot;组类型dept、role&quot;);&#xD;&#xA;group.getId();&#xD;&#xA;group.getName();&#xD;&#xA;group.getLevelNum();" doc="返回用户组信息&#xD;&#xA;组编号&#xD;&#xA;group.getId();&#xD;&#xA;组名称&#xD;&#xA;group.getName();&#xD;&#xA;组级别&#xD;&#xA;group.getLevelNum();"/>
    <dataVariableDef name="比较角色大小" dataType="boolean" value="import com.founder.fix.fixflow.core.impl.identity.Authentication;&#xD;&#xA;nowGroup=Authentication.findMaxLevelGroupByUserId(processInfo.getInitiator(),&quot;role&quot;);&#xD;&#xA;nowLevelNum=nowGroup.getLevelNum();&#xD;&#xA;oldGroup=Authentication.findGroupByGroupIdAndType(&quot;bumenjingli&quot;,&quot;role&quot;)&#xD;&#xA;oldLevelNum=oldGroup.getLevelNum();&#xD;&#xA;if(nowLevelNum&lt;oldLevelNum){&#xD;&#xA;&#x9;return &#x9;true;&#xD;&#xA;}&#xD;&#xA;else{&#xD;&#xA;&#x9;return &#x9;false;&#xD;&#xA;}" doc="比较两个角色的大小"/>
    <dataVariableDef name="获取部门领导" dataType="java.lang.String" value="import com.founder.fix.fixflow.core.impl.Context;&#xA;import com.founder.fix.fixflow.core.impl.identity.GroupTo;&#xA;&#xA;groupTos=Context.getProcessEngineConfiguration().getUserDefinition().getUserInGroups(&quot;用户编号&quot;);&#xA;for (GroupTo groupTo : groupTos) {&#xA;&#x9;//默认取出用户的第一个所在部门&#xA;&#x9;if(groupTo.getGroupType().equals(&quot;org&quot;)){&#xA;&#x9;&#x9;return processInfo.findUserDeptAndRole(groupTo.getGroupId(),&quot;角色编号&quot;);;&#xA;&#x9;}&#xA;}&#xA;return null;" doc="默认会返回用户所在第一个部门的指定角色1"/>
  </foxBPMDataVariable>
  <foxBPMDataVariable type="类型ID5">
	<dataVariableDef name="所有人" dataType="java.lang.String" value="&quot;foxbpm_all_user&quot;" doc="系统中的所有用户"/>
  </foxBPMDataVariable>
  <dataVariableDataType>
    <dataTypeDef name="文本" typeValue="java.lang.String" id="String"/>
    <dataTypeDef name="整型" typeValue="int" id="int"/>
    <dataTypeDef name="Java对象" typeValue="java.lang.Object" id="Object"/>
    <dataTypeDef name="布尔类型" typeValue="boolean" id="Boolean"/>
    <dataTypeDef name="字节类型" typeValue="byte[]" id="byte[]"/>
    <dataTypeDef name="short" typeValue="short" id="short"/>
    <dataTypeDef name="高精度数字" typeValue="java.math.BigDecimal" id="BigDecimal"/>
    <dataTypeDef name="long" typeValue="long" id="long"/>
    <dataTypeDef name="float" typeValue="float" id="float"/>
    <dataTypeDef name="double" typeValue="double" id="double"/>
    <dataTypeDef name="日期类型" typeValue="java.util.Date" id="Date"/>
    <dataTypeDef name="时间类型" typeValue="java.sql.Time" id="Time"/>
    <dataTypeDef name="时间戳类型" typeValue="java.sql.Timestamp" id="Timestamp"/>
    <dataTypeDef name="Blob" typeValue="java.sql.Blob" id="Blob"/>
    <dataTypeDef name="Clob" typeValue="java.sql.Clob" id="Clob"/>
    <dataTypeDef name="List&lt;Map&lt;String, Object>>" typeValue="java.util.List&lt;java.util.Map&lt;String, Object>>" id="List&lt;Map&lt;String, Object>>"/>
    <dataTypeDef name="List&lt;String>" typeValue="java.util.List&lt;String>" id="List&lt;String>"/>
    <dataTypeDef name="String[]" typeValue="String[]" id="String[]"/>
    <dataTypeDef name="java.util.HashMap" typeValue="java.util.HashMap" id="java.util.HashMap"/>
    <dataTypeDef name="java.util.Map&lt;String, java.util.List&lt;String>>" typeValue="java.util.Map&lt;String, java.util.List&lt;String>>" id="Map_List"/>
    <dataTypeDef name="List&lt;LinkedHashMap&lt;String,String>>" typeValue="List&lt;LinkedHashMap&lt;String,String>>" id="List_LinkedHashMap"/>
    <dataTypeDef name="Object[]" typeValue="Object[]" id="Object[]"/>
    <dataTypeDef name="java.util.List" typeValue="java.util.List" id="java.util.List"/>
    <dataTypeDef name="List&lt;Object>" typeValue="java.util.List&lt;Object>" id="List&lt;Object>"/>
  </dataVariableDataType>
  <dataVariableBizTypeConfig>
    <dataVariableBizType typeId="form" typeName="表单" img="copynext_16.png"/>
    <dataVariableBizType typeId="dataBaseVariable" typeName="数据库变量" img="systemsave_16.png"/>
    <dataVariableBizType typeId="bizObjVariable" typeName="业务对象变量" img="estat_16.png"/>
    <dataVariableBizType typeId="customVariable" typeName="自定义变量" img="recycle_16.png"/>
  </dataVariableBizTypeConfig>
</variableconfig:DataVariableConfig>
